version: '3.8'

services:
  # MongoDB Database
  mongodb:
    image: mongo:7.0
    container_name: mongodb
    restart: unless-stopped
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_DATABASE: book_service_db
    volumes:
      - mongodb_data:/data/db
    networks:
      - microservice-network

  # Book Service
  book-service:
    build:
      context: ./apps/book-service
      dockerfile: Dockerfile.dev
    container_name: book-service
    restart: unless-stopped
    ports:
      - "3001:3001"
    environment:
      - PORT=3001
      - MONGODB_URI=mongodb://mongodb:27017/book_service_db
      - NODE_ENV=development
    depends_on:
      - mongodb
    networks:
      - microservice-network
    volumes:
      - ./apps/book-service/src:/app/src
      - ./apps/book-service/package.json:/app/package.json
      - book_service_node_modules:/app/node_modules

  # Reservation Service
  reservation-service:
    build:
      context: ./apps/reservation-service
      dockerfile: Dockerfile.dev
    container_name: reservation-service
    restart: unless-stopped    
    ports:
      - "3002:3002"
    environment:
      - PORT=3002
      - MONGODB_URI=mongodb://mongodb:27017/reservation_service_db
      - BOOK_SERVICE_URL=http://book-service:3001/books # Added for inter-service communication
      - NODE_ENV=development
    depends_on:
      - mongodb
    networks:
      - microservice-network
    volumes:
      - ./apps/reservation-service/src:/app/src
      - ./apps/reservation-service/package.json:/app/package.json
      - reservation_service_node_modules:/app/node_modules

  # Frontend
  frontend:
    build:
      context: ./apps/frontend
      dockerfile: Dockerfile.dev
    container_name: frontend
    restart: unless-stopped
    ports:
      - "3000:3000"    
    environment:
      - NEXT_PUBLIC_BOOK_SERVICE_URL=http://localhost:3001/books
      - NEXT_PUBLIC_RESERVATION_SERVICE_URL=http://localhost:3002/reservations
      - NODE_ENV=development
    depends_on:
      - book-service
      - reservation-service
    networks:
      - microservice-network
    volumes:
      - ./apps/frontend/src:/app/src
      - ./apps/frontend/package.json:/app/package.json
      - ./apps/frontend/public:/app/public
      - frontend_node_modules:/app/node_modules

networks:
  microservice-network:
    driver: bridge

volumes:
  mongodb_data:
  book_service_node_modules:
  reservation_service_node_modules:
  frontend_node_modules:
